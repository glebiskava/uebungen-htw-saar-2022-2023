#BlueJ class context
comment0.target=StringQueue
comment0.text=\r\n\ Dies\ ist\ eine\ einfache\ StringQueue\ Klasse\ die\ das\ Interface\ Queue\ implementiert\r\n
comment1.params=
comment1.target=StringQueue()
comment1.text=\r\n\ Konstruktor\ fuer\ die\ Queue\ mit\ Standardgroesse\ 10\ und\ aktueller\ groesse\ 0\r\n
comment2.params=o
comment2.target=void\ addLast(java.lang.Object)
comment2.text=\r\n\ Methode\ die\ ein\ Element\ am\ Ende\ des\ Arrays\ anfuegt\r\n\ @param\ o\ element\ welches\ angefuegt\ wird\r\n
comment3.params=
comment3.target=java.lang.Object\ removeFirst()
comment3.text=\r\n\ Methode\ die\ das\ erste\ Element\ loescht\ und\ das\ geloeschte\ Element\ zurueckgibt\r\n\ @return\ geloeschtes\ Element\r\n
comment4.params=
comment4.target=java.lang.Object\ removeLast()
comment4.text=\r\n\ Methode\ die\ das\ letzte\ Element\ loescht\ und\ das\ geloeschte\ Element\ zurueckgibt\r\n\ @return\ geloeschtes\ Element\r\n
comment5.params=i
comment5.target=java.lang.Object\ get(int)
comment5.text=\r\n\ Methode\ die\ das\ i'te\ Element\ zurueckgibt\r\n\ @param\ i\ stelle\ (index)\ des\ Elements\r\n\ @return\ element\ an\ i'ter\ Stelle\r\n
comment6.params=
comment6.target=boolean\ empty()
comment6.text=\r\n\ Methode\ schaut\ ob\ Queue\ leer\ ist\r\n\ @return\ true,\ wenn\ sie\ leer\ ist\ und\ false,\ wenn\ nicht\r\n
comment7.params=
comment7.target=boolean\ full()
comment7.text=\r\n\ Methode\ schaut\ ob\ Queue\ voll\ ist\ also\ ob\ es\ noch\ anfuegbare\ Elemente\ gibt\r\n\ @return\ true,\ wenn\ sie\ voll\ ist\ und\ false,\ wenn\ nicht\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ Mehode\ gibt\ die\ Anzahl\ der\ Elemente\ im\ Array\ also\ die\ Laenge\ des\ Arrays\ wieder\r\n\ @return\ laenge\ des\ Arrays,\ anzahl\ der\ elemente\r\n
comment9.params=q
comment9.target=void\ print(Queue)
comment9.text=\r\n\ Methode\ die\ jeweilige\ Warteschlange\ mithilfe\ der\ get-Methode\r\n\ sequenziell\ durchlaeuft\ und\ ausgibt\r\n\ @param\ q\r\n
numComments=10
